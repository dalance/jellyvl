
module etherneco_synctimer_slave #(
    parameter TIMER_WIDTH      : u32 = 64                             , // タイマのbit幅
    parameter NUMERATOR        : u32 = 10                             , // クロック周期の分子
    parameter DENOMINATOR      : u32 = 3                              , // クロック周期の分母
    parameter ADJ_COUNTER_WIDTH: u32 = 32                             , // 自クロックで経過時間カウンタのbit数
    parameter ADJ_CALC_WIDTH   : u32 = 32                             , // タイマのうち計算に使う部分
    parameter ADJ_ERROR_WIDTH  : u32 = 32                             , // 誤差計算時のbit幅
    parameter ADJ_ERROR_Q      : u32 = 8                              , // 誤差計算時に追加する固定小数点数bit数
    parameter ADJ_ADJUST_WIDTH : u32 = ADJ_COUNTER_WIDTH + ADJ_ERROR_Q, // 補正周期のbit幅
    parameter ADJ_ADJUST_Q     : u32 = ADJ_ERROR_Q                    , // 補正周期に追加する固定小数点数bit数
    parameter ADJ_PERIOD_WIDTH : u32 = ADJ_ERROR_WIDTH                , // 周期補正に使うbit数
    parameter ADJ_PHASE_WIDTH  : u32 = ADJ_ERROR_WIDTH                , // 位相補正に使うbit数
) (
    reset: input logic,
    clk  : input logic,

    current_time: output logic<TIMER_WIDTH>,

    sync_start   : input logic,
    sync_override: input logic,

    s_last : input logic   ,
    s_data : input logic<8>,
    s_valid: input logic   ,

    m_last : output logic   ,
    m_data : output logic<8>,
    m_valid: output logic   ,
) {

    localparam t_adj_phase: type = signed logic<ADJ_PHASE_WIDTH>;
    localparam t_time     : type = logic<TIMER_WIDTH>;

    var correct_override: logic ;
    var correct_time    : t_time;
    var correct_valid   : logic ;

    inst u_synctimer_core: synctimer_core #(
        TIMER_WIDTH      : TIMER_WIDTH      ,
        NUMERATOR        : NUMERATOR        ,
        DENOMINATOR      : DENOMINATOR      ,
        ADJ_COUNTER_WIDTH: ADJ_COUNTER_WIDTH,
        ADJ_CALC_WIDTH   : ADJ_CALC_WIDTH   ,
        ADJ_ERROR_WIDTH  : ADJ_ERROR_WIDTH  ,
        ADJ_ERROR_Q      : ADJ_ERROR_Q      ,
        ADJ_ADJUST_WIDTH : ADJ_ADJUST_WIDTH ,
        ADJ_ADJUST_Q     : ADJ_ADJUST_Q     ,
        ADJ_PERIOD_WIDTH : ADJ_PERIOD_WIDTH ,
        ADJ_PHASE_WIDTH  : ADJ_PHASE_WIDTH  ,
    ) (
        reset: reset,
        clk  : clk  ,

        adj_param_phase_min: -10 as t_adj_phase,
        adj_param_phase_max: +10 as t_adj_phase,

        set_time : '0  ,
        set_valid: 1'b0,

        current_time :  current_time,

        correct_override: correct_override,
        correct_time    : correct_time    ,
        correct_valid   : correct_valid   ,
    );


}
